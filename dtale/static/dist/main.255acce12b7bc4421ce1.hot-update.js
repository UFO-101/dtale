"use strict";
self["webpackHotUpdatedtale"]("main",{

/***/ "./static/redux/state/AppState.ts":
/*!****************************************!*\
  !*** ./static/redux/state/AppState.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PredfinedFilterInputType = exports.QueryEngine = exports.ThemeType = exports.BASE_INSTANCE_SETTINGS = exports.SortDir = exports.initialPopup = exports.PopupType = exports.DataViewerUpdateType = exports.SidePanelType = exports.RibbonDropdownType = exports.initialVisibility = void 0;
exports.initialVisibility = { visible: false };
/** Ribbon dropdown types */
var RibbonDropdownType;
(function (RibbonDropdownType) {
    RibbonDropdownType["MAIN"] = "main";
    RibbonDropdownType["ACTIONS"] = "actions";
    RibbonDropdownType["VISUALIZE"] = "visualize";
    RibbonDropdownType["HIGHLIGHT"] = "highlight";
    RibbonDropdownType["SETTINGS"] = "settings";
})(RibbonDropdownType = exports.RibbonDropdownType || (exports.RibbonDropdownType = {}));
/** Side panel types */
var SidePanelType;
(function (SidePanelType) {
    SidePanelType["GOBOARD"] = "goboard";
    SidePanelType["SHOW_HIDE"] = "show_hide";
    SidePanelType["DESCRIBE"] = "describe";
    SidePanelType["MISSINGNO"] = "missingno";
    SidePanelType["CORR_ANALYSIS"] = "corr_analysis";
    SidePanelType["CORRELATIONS"] = "correlations";
    SidePanelType["PPS"] = "pps";
    SidePanelType["FILTER"] = "filter";
    SidePanelType["PREDEFINED_FILTERS"] = "predefined_filters";
    SidePanelType["GAGE_RNR"] = "gage_rnr";
    SidePanelType["TIMESERIES_ANALYSIS"] = "timeseries_analysis";
})(SidePanelType = exports.SidePanelType || (exports.SidePanelType = {}));
/** Different types of data viewer updates */
var DataViewerUpdateType;
(function (DataViewerUpdateType) {
    DataViewerUpdateType["TOGGLE_COLUMNS"] = "toggle-columns";
    DataViewerUpdateType["UPDATE_MAX_WIDTH"] = "update-max-width";
    DataViewerUpdateType["UPDATE_MAX_HEIGHT"] = "update-max-height";
    DataViewerUpdateType["DROP_COLUMNS"] = "drop-columns";
})(DataViewerUpdateType = exports.DataViewerUpdateType || (exports.DataViewerUpdateType = {}));
/** Popup type names */
var PopupType;
(function (PopupType) {
    PopupType["HIDDEN"] = "hidden";
    PopupType["FILTER"] = "filter";
    PopupType["COLUMN_ANALYSIS"] = "column-analysis";
    PopupType["CORRELATIONS"] = "correlations";
    PopupType["PPS"] = "pps";
    PopupType["BUILD"] = "build";
    PopupType["TYPE_CONVERSION"] = "type-conversion";
    PopupType["CLEANERS"] = "cleaners";
    PopupType["RESHAPE"] = "reshape";
    PopupType["ABOUT"] = "about";
    PopupType["CONFIRM"] = "confirm";
    PopupType["COPY_RANGE"] = "copy-range";
    PopupType["COPY_COLUMN_RANGE"] = "copy-column-range";
    PopupType["COPY_ROW_RANGE"] = "copy-row-range";
    PopupType["RANGE"] = "range";
    PopupType["XARRAY_DIMENSIONS"] = "xarray-dimensions";
    PopupType["XARRAY_INDEXES"] = "xarray-indexes";
    PopupType["RENAME"] = "rename";
    PopupType["REPLACEMENT"] = "replacement";
    PopupType["ERROR"] = "error";
    PopupType["INSTANCES"] = "instances";
    PopupType["VARIANCE"] = "variance";
    PopupType["UPLOAD"] = "upload";
    PopupType["DUPLICATES"] = "duplicates";
    PopupType["CHARTS"] = "charts";
    PopupType["DESCRIBE"] = "describe";
    PopupType["EXPORT"] = "export";
})(PopupType = exports.PopupType || (exports.PopupType = {}));
exports.initialPopup = { ...exports.initialVisibility, type: PopupType.HIDDEN };
/** Sort directions */
var SortDir;
(function (SortDir) {
    SortDir["ASC"] = "ASC";
    SortDir["DESC"] = "DESC";
})(SortDir = exports.SortDir || (exports.SortDir = {}));
exports.BASE_INSTANCE_SETTINGS = Object.freeze({
    allow_cell_edits: true,
    hide_shutdown: false,
    precision: 2,
    verticalHeaders: false,
    predefinedFilters: {},
});
/** Different themes available for D-Tale */
var ThemeType;
(function (ThemeType) {
    ThemeType["LIGHT"] = "light";
    ThemeType["DARK"] = "dark";
})(ThemeType = exports.ThemeType || (exports.ThemeType = {}));
/** Python query engines for executing custom queries */
var QueryEngine;
(function (QueryEngine) {
    QueryEngine["PYTHON"] = "python";
    QueryEngine["NUMEXPR"] = "numexpr";
})(QueryEngine = exports.QueryEngine || (exports.QueryEngine = {}));
/** Predefined filter types */
var PredfinedFilterInputType;
(function (PredfinedFilterInputType) {
    PredfinedFilterInputType["INPUT"] = "input";
    PredfinedFilterInputType["SELECT"] = "select";
    PredfinedFilterInputType["MULTISELECT"] = "multiselect";
})(PredfinedFilterInputType = exports.PredfinedFilterInputType || (exports.PredfinedFilterInputType = {}));


/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("34a0c8da336fbae082e4")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,